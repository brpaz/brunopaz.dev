---
import { Image } from 'astro:assets';
import '@splidejs/splide/css';

interface Props {
  slug: string;
  images: string[];
}

const { slug, images } = Astro.props as Props;

export async function getImages(
  slug: string,
  imageNames: string[],
): Promise<string[]> {
  return Promise.all(
    imageNames.map(async (image) => {
      const imageParts = image.split('.');
      const imageFileName = imageParts[0];
      const imageFileExtension = imageParts[1];

      return (
        await import(
          `./../../assets/images/projects/${slug}/${imageFileName}.${imageFileExtension}`
        )
      ).default;
    }),
  );
}

const imageUrls = await getImages(slug, images);
---

<section id="image-carousel" class="splide mb-4" aria-label="Project Images">
  <div class="splide__track">
    <ul class="splide__list">
      {
        imageUrls.map((imageUrl, index) => (
          <li class="splide__slide">
            <Image src={imageUrl} alt={`Project Image ${index}+1 `} />
          </li>
        ))
      }
    </ul>
  </div>
</section>

<section
  id="thumbnail-carousel"
  class="splide flex justify-center"
  aria-label="Project Thumbnail Images"
>
  <div class="splide__track">
    <ul class="splide__list">
      {
        imageUrls.map((imageUrl, index) => (
          <li class="splide__slide">
            <Image src={imageUrl} alt={`Project Image ${index}+1 `} />
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style>
  .splide__slide {
    width: 100%;
    height: 480px;
    @apply bg-neutral-100;
    align-items: center;
    display: flex;
  }

  .splide__slide img {
    max-width: 100%;
    max-height: 100%;
    display: flex;
    margin: 0 auto;
  }

  .splide__track--nav > .splide__list > .splide__slide.is-active {
    @apply border-2 border-primary-400;
  }
</style>

<script>
  import { Splide } from '@splidejs/splide';

  function initGallery() {
    const carouselElem = document.getElementById('image-carousel');

    if (!carouselElem) {
      return;
    }
    const mainCarousel = new Splide('#image-carousel', {
      type: 'fade',
      rewind: true,
      pagination: false,
      arrows: true,
    });

    const thumbsCarousel = new Splide('#thumbnail-carousel', {
      fixedWidth: 120,
      fixedHeight: 60,
      gap: 10,
      rewind: true,
      pagination: false,
      isNavigation: true,
      arrows: false,
    });

    thumbsCarousel.mount();
    mainCarousel.sync(thumbsCarousel).mount();
  }
  document.addEventListener('astro:page-load', initGallery);
</script>
